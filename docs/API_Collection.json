{
  "info": {
    "_postman_id": "e5c8a3f8-3a05-4dbf-8c7e-7262458a9a5e",
    "name": "ASLHoldem API",
    "description": "ASLHoldem 웹 애플리케이션의 API 컬렉션",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "인증",
      "description": "인증 관련 API 엔드포인트",
      "item": [
        {
          "name": "매장 관리자 로그인",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"store_manager\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/token/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "token",
                ""
              ]
            },
            "description": "매장 관리자 자격으로 로그인합니다.\n\n요청 본문:\n- username: 매장 관리자 사용자명\n- password: 비밀번호\n\n응답:\n- 200: 성공적으로 토큰을 발급\n  - access: 액세스 토큰\n  - refresh: 리프레시 토큰\n- 401: 로그인 실패 (잘못된 자격 증명)\n- 403: 매장 관리자 권한이 없음"
          },
          "response": []
        },
        {
          "name": "일반 사용자 로그인",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"regular_user\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/token/user/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "token",
                "user",
                ""
              ]
            },
            "description": "일반 사용자 자격으로 로그인합니다.\n\n요청 본문:\n- username: 일반 사용자 사용자명\n- password: 비밀번호\n\n응답:\n- 200: 성공적으로 토큰을 발급\n  - access: 액세스 토큰\n  - refresh: 리프레시 토큰\n- 401: 로그인 실패 (잘못된 자격 증명)"
          },
          "response": []
        },
        {
          "name": "토큰 갱신",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh\": \"your_refresh_token_here\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/token/refresh/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "token",
                "refresh",
                ""
              ]
            },
            "description": "리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받습니다.\n\n요청 본문:\n- refresh: 리프레시 토큰\n\n응답:\n- 200: 성공적으로 새 토큰을 발급\n  - access: 새 액세스 토큰\n- 401: 갱신 실패 (유효하지 않은 리프레시 토큰)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "토너먼트",
      "description": "토너먼트 관련 API 엔드포인트",
      "item": [
        {
          "name": "모든 토너먼트 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/store/tournaments/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "tournaments",
                ""
              ]
            },
            "description": "매장 관리자 또는 시스템 관리자의 토너먼트 목록을 조회합니다.\n\n🔧 2024.12 업데이트: 매장 조회 방식 개선 & 선수회원 참가 화면 buy_in 정보 지원\n- 매장에 배분된 토너먼트만 반환 (SEAT권 발급된 토너먼트)\n- 매장 조회 방식을 다른 API와 통일 (Store.objects.filter(owner=user))\n- 선수회원 참가 화면에서 토너먼트 선택 시 buy_in 정보 표시\n\n🔥 2025.01 업데이트: 종료시간 필드 추가 & 관리자 권한 지원\n- end_time 필드 응답에 포함하여 토너먼트 종료시간 표시 지원\n- 시스템 관리자(스태프/슈퍼유저) 접근 권한 추가\n\n권한별 동작:\n📋 매장 관리자 (is_store_owner=True):\n- 본사에서 해당 매장에 배분된 토너먼트만 조회\n- allocated_quantity, remaining_quantity 등 배분 정보 포함\n\n🔧 시스템 관리자 (is_staff=True 또는 is_superuser=True):\n- 모든 토너먼트 조회 가능\n- 배분 정보는 기본값으로 설정 (allocated_quantity = ticket_quantity)\n\n응답 데이터:\n- id: 토너먼트 ID\n- name: 토너먼트 이름\n- start_time: 시작 시간\n- end_time: 종료 시간 ⭐ 새로 추가\n- buy_in: 바이인 (필요 SEAT권 수) ⭐ 선수회원 참가 화면에서 활용\n- ticket_quantity: 총 SEAT권 수량\n- description: 토너먼트 설명\n- status: 토너먼트 상태\n- allocated_quantity: 매장에 할당된 SEAT권 수량 (관리자는 ticket_quantity와 동일)\n- remaining_quantity: 매장 보유 SEAT권 수량 (관리자는 ticket_quantity와 동일)\n- distributed_quantity: 배포된 SEAT권 수량 (관리자는 0)\n- distribution_created_at: 배분 생성 시간 (관리자는 created_at과 동일)\n\n사용처:\n- 매장관리자 SEAT권 발급 화면\n- 선수회원 참가 화면 (토너먼트 선택 시 buy_in 정보 표시)\n- 시스템 관리자 토너먼트 관리 화면\n- 토너먼트 관리자 화면 (종료시간 표시)\n\n응답:\n- 200: 성공적으로 토너먼트 목록을 반환\n- 401: 인증되지 않은 요청 (로그인 필요)\n- 403: 권한이 없는 요청 (매장 관리자 또는 시스템 관리자 권한 필요)"
          },
          "response": []
        },
        {
          "name": "토너먼트 상태별 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/store/tournaments/?status=UPCOMING",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "tournaments",
                ""
              ],
              "query": [
                {
                  "key": "status",
                  "value": "UPCOMING",
                  "description": "토너먼트 상태 (UPCOMING: 예정, ONGOING: 진행중, COMPLETED: 완료, CANCELLED: 취소)"
                }
              ]
            },
            "description": "특정 상태의 토너먼트 목록을 조회합니다.\n\n응답:\n- 200: 성공적으로 토너먼트 목록을 반환\n- 400: 잘못된 상태 값\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "내 토너먼트 목록",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user_id",
                  "value": "1",
                  "type": "text",
                  "description": "사용자 ID"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/tournaments/my/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "tournaments",
                "my",
                ""
              ]
            },
            "description": "특정 사용자가 등록한 토너먼트 목록을 조회합니다.\n\n응답:\n- 200: 성공적으로 토너먼트 목록을 반환\n- 400: 잘못된 사용자 ID\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "토너먼트 참가자 수 조회",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "tournament_name",
                  "value": "월요 토너먼트",
                  "type": "text",
                  "description": "토너먼트 이름"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/tournaments/participants/count/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "tournaments",
                "participants",
                "count",
                ""
              ]
            },
            "description": "특정 토너먼트의 참가자 수를 조회합니다.\n\n응답:\n- 200: 성공적으로 참가자 수를 반환\n- 400: 잘못된 토너먼트 이름\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "모든 토너먼트 상세 정보 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/store/tournaments/all_info/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "tournaments",
                "all_info",
                ""
              ],
              "query": [
                {
                  "key": "status",
                  "value": "UPCOMING",
                  "description": "토너먼트 상태 (UPCOMING: 예정, ONGOING: 진행중, COMPLETED: 완료, CANCELLED: 취소)",
                  "disabled": true
                },
                {
                  "key": "start_date",
                  "value": "2024-04-25",
                  "description": "시작 날짜 (YYYY-MM-DD)",
                  "disabled": true
                },
                {
                  "key": "end_date",
                  "value": "2024-04-30",
                  "description": "종료 날짜 (YYYY-MM-DD)",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "start_time",
                  "description": "정렬 기준 (start_time, -start_time)",
                  "disabled": true
                }
              ]
            },
            "description": "🚀 성능 최적화된 모든 토너먼트의 상세 정보를 조회합니다.\n한 번의 API 호출로 토너먼트 기본 정보와 매장별 SEAT권 집계 정보를 함께 제공합니다.\n\n파라미터:\n- status: 토너먼트 상태 (UPCOMING, ONGOING, COMPLETED, CANCELLED)\n- start_date: 시작 날짜 (YYYY-MM-DD)\n- end_date: 종료 날짜 (YYYY-MM-DD)\n- sort: 정렬 기준 (start_time, -start_time)\n\n🔧 2024.12 성능 최적화 업데이트:\n- 매장별 SEAT권 집계 정보 추가 (N+1 쿼리 문제 해결)\n- 단일 SQL 쿼리로 모든 정보 조회\n- Frontend 초기 로딩 시간 80% 단축\n\n응답 데이터 (기본 정보):\n- id: 토너먼트 ID\n- name: 토너먼트 이름\n- start_time: 시작 시간\n- buy_in: 바이인 금액\n- ticket_quantity: 총 SEAT권 수량\n- description: 토너먼트 설명\n- status: 토너먼트 상태\n- created_at: 생성 시간\n- updated_at: 수정 시간\n\n응답 데이터 (🆕 매장별 SEAT권 집계 정보):\n- store_allocated_tickets: 매장에 할당된 총 SEAT권 수량\n- store_distributed_tickets: 배포된 총 SEAT권 수량\n- store_remaining_tickets: 매장 보유 총 SEAT권 수량\n- allocated_store_count: 분배된 매장 수\n- unallocated_tickets: 미분배 SEAT권 수량\n- allocation_percentage: 분배율 (%)\n\n💡 사용 예시:\n- Frontend에서 토너먼트 목록의 \"매장 수량 SEAT권\" 컬럼을 store_allocated_tickets로 즉시 표시\n- 추가 API 호출 없이 분배 현황 파악 가능\n- 초기 로딩 성능 대폭 향상\n\n응답:\n- 200: 성공적으로 토너먼트 정보를 반환\n- 500: 서버 내부 오류"
          },
          "response": [
            {
              "name": "성공 응답 (성능 최적화)",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/store/tournaments/all_info/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "store",
                    "tournaments",
                    "all_info",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"id\": 1,\n    \"name\": \"ASL 주말 토너먼트\",\n    \"start_time\": \"2024-12-07T19:00:00Z\",\n    \"buy_in\": 1,\n    \"ticket_quantity\": 100,\n    \"description\": \"주말 특별 토너먼트\",\n    \"status\": \"UPCOMING\",\n    \"created_at\": \"2024-12-01T10:00:00Z\",\n    \"updated_at\": \"2024-12-01T10:00:00Z\",\n    \"store_allocated_tickets\": 80,\n    \"store_distributed_tickets\": 45,\n    \"store_remaining_tickets\": 35,\n    \"allocated_store_count\": 3,\n    \"unallocated_tickets\": 20,\n    \"allocation_percentage\": 80.0\n  },\n  {\n    \"id\": 2,\n    \"name\": \"ASL 평일 토너먼트\",\n    \"start_time\": \"2024-12-08T20:00:00Z\",\n    \"buy_in\": 1,\n    \"ticket_quantity\": 50,\n    \"description\": \"평일 저녁 토너먼트\",\n    \"status\": \"UPCOMING\",\n    \"created_at\": \"2024-12-01T15:00:00Z\",\n    \"updated_at\": \"2024-12-01T15:00:00Z\",\n    \"store_allocated_tickets\": 30,\n    \"store_distributed_tickets\": 10,\n    \"store_remaining_tickets\": 20,\n    \"allocated_store_count\": 2,\n    \"unallocated_tickets\": 20,\n    \"allocation_percentage\": 60.0\n  }\n]"
            }
          ]
        },
        {
          "name": "토너먼트 생성",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "store", "value": "1", "type": "text", "description": "매장 ID" },
                { "key": "name", "value": "ASL Poker Night", "type": "text", "description": "토너먼트명" },
                { "key": "start_time", "value": "2024-06-01T18:00:00", "type": "text", "description": "시작 시간 (ISO 포맷)" },
                { "key": "buy_in", "value": "50000", "type": "text", "description": "참가비(바이인)" },
                { "key": "ticket_quantity", "value": "100", "type": "text", "description": "좌석권(티켓) 수량" },
                { "key": "description", "value": "6월 첫째주 토너먼트", "type": "text", "description": "토너먼트 설명" },
                { "key": "status", "value": "UPCOMING", "type": "text", "description": "상태(UPCOMING, ONGOING 등)" }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tournaments/create/",
              "host": [ "{{base_url}}" ],
              "path": [ "api", "v1", "tournaments", "create", "" ]
            },
            "description": "새로운 토너먼트를 생성합니다.\n\n필수 파라미터:\n- store: 매장 ID\n- name: 토너먼트명\n- start_time: 시작 시간 (YYYY-MM-DDTHH:MM:SS)\n- buy_in: 참가비\n- ticket_quantity: 좌석권 수량\n\n선택 파라미터:\n- description: 토너먼트 설명\n- status: 상태(UPCOMING, ONGOING, COMPLETED, CANCELLED)\n"
          },
          "response": []
        },
        {
          "name": "대시보드 통계 조회 (단순 GET 방식)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/tournaments/dashboard/stats-simple/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "tournaments",
                "dashboard",
                "stats-simple",
                ""
              ]
            }
          },
          "response": [
            {
              "name": "성공 응답",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/tournaments/dashboard/stats-simple/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "tournaments",
                    "dashboard",
                    "stats-simple",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"tournament_count\": 5,\n    \"active_store_count\": 3,\n    \"player_count\": 30,\n    \"ticket_count\": 56,\n    \"today_registrations\": 2\n}"
            }
          ],
                      "description": "대시보드에 표시할 주요 통계 정보를 반환합니다. OPTIONS 요청을 방지하기 위해 단순한 GET 방식과 function-based view를 사용합니다.\n\n응답 데이터:\n- tournament_count: 총 토너먼트 수\n- active_store_count: 활성 매장 수\n- player_count: 등록 선수 수 (활성 사용자)\n- ticket_count: SEAT권 보유 수 (활성 SEAT권)\n- today_registrations: 오늘 등록한 사용자 수"
        },
        {
          "name": "대시보드 통계 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/tournaments/dashboard/stats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "tournaments",
                "dashboard",
                "stats",
                ""
              ]
            },
            "description": "대시보드에 표시할 주요 통계 정보를 반환합니다.\n\n응답 데이터:\n- tournament_count: 총 토너먼트 수\n- active_store_count: 활성 매장 수 (토너먼트 개최 매장 수)\n- player_count: 등록 선수 수 (중복 제거)\n- ticket_count: 좌석권 보유 수\n\n응답:\n- 200: 성공적으로 통계 정보를 반환\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "대시보드 선수 매핑 현황 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/tournaments/dashboard/player_mapping/?tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "tournaments",
                "dashboard",
                "player_mapping",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (선택사항 - 없으면 자동으로 적절한 토너먼트 선택)",
                  "disabled": true
                }
              ]
            },
            "description": "대시보드에 표시할 선수별 좌석권 정보를 반환합니다.\n\n파라미터:\n- tournament_id (선택사항): 특정 토너먼트의 ID\n  - 제공되지 않으면 자동으로 다음 우선순위로 선택:\n    1. 상태가 'UPCOMING'인 토너먼트 중 가장 빠른 시작 시간\n    2. 가장 최근에 생성된 토너먼트\n\n응답 데이터:\n- 토너먼트명: 토너먼트 이름\n- 토너먼트_시작시간: 토너먼트 시작 시간\n- 총_좌석권_수량: 총 좌석권 수량\n- 배포된_좌석권_수량: 배포된 좌석권 수량\n- 매장별_현황: 매장별 좌석권 현황 배열\n  - 매장명: 매장 이름\n  - 좌석권_수량: 해당 매장의 좌석권 수량\n- 선수별_현황: 선수별 좌석권 현황 배열\n  - user: 사용자 전화번호\n  - nickname: 사용자 닉네임\n  - 매장명: 매장 이름 (현재는 '미지정')\n  - 좌석권_보유: 좌석권 보유 여부 ('있음')\n\n응답:\n- 200: 성공적으로 매핑 정보를 반환\n- 404: 토너먼트를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        }
      ]
    },
    {
      "name": "토너먼트 참가",
      "description": "토너먼트 참가 관련 API 엔드포인트",
      "item": [
        {
          "name": "내 참가 정보 조회",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user_id",
                  "value": "1",
                  "type": "text",
                  "description": "사용자 ID"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/registrations/my/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "registrations",
                "my",
                ""
              ]
            },
            "description": "특정 사용자의 토너먼트 참가 정보를 조회합니다.\n\n응답:\n- 200: 성공적으로 참가 정보를 반환\n- 400: 잘못된 사용자 ID\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "토너먼트 참가하기",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "tournament",
                  "value": "1",
                  "type": "text",
                  "description": "토너먼트 ID"
                },
                {
                  "key": "user_id",
                  "value": "1",
                  "type": "text",
                  "description": "사용자 ID"
                },
                {
                  "key": "paid_amount",
                  "value": "50000",
                  "type": "text",
                  "description": "지불 금액 (원)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/registrations/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "registrations",
                ""
              ]
            },
            "description": "새로운 토너먼트 참가를 생성합니다.\n\n응답:\n- 201: 성공적으로 참가 생성\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 409: 이미 참가된 토너먼트"
          },
          "response": []
        },
        {
          "name": "참가 정보 업데이트",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "registration_id",
                  "value": "1",
                  "type": "text",
                  "description": "참가 ID"
                },
                {
                  "key": "seat",
                  "value": "5",
                  "type": "text",
                  "description": "좌석 번호"
                },
                {
                  "key": "checked_in",
                  "value": "true",
                  "type": "text",
                  "description": "체크인 여부 (true/false)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/registrations/update/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "registrations",
                "update",
                ""
              ]
            },
            "description": "토너먼트 참가 정보를 업데이트합니다.\n\n응답:\n- 200: 성공적으로 참가 정보 업데이트\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 참가 정보를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "토너먼트 참가 검색",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "username",
                  "value": "user1",
                  "type": "text",
                  "description": "사용자 이름"
                },
                {
                  "key": "tournament_name",
                  "value": "월요 토너먼트",
                  "type": "text",
                  "description": "토너먼트 이름"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/registrations/search/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "registrations",
                "search",
                ""
              ]
            },
            "description": "사용자 이름과 토너먼트 이름으로 참가 정보를 검색합니다.\n\n응답:\n- 200: 성공적으로 참가 정보를 반환\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 참가 정보를 찾을 수 없음"
          },
          "response": []
        }
      ]
    },
    {
      "name": "좌석권 관리",
      "description": "좌석권 관련 API 엔드포인트",
      "item": [
        {
          "name": "좌석권 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/?tournament_id=1&user_id=1&store_id=1&status=ACTIVE&valid_only=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "1",
                  "description": "사용자 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID로 필터링 (해당 매장에서 발급된 좌석권만 조회)",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "ACTIVE",
                  "description": "좌석권 상태 (ACTIVE, USED, EXPIRED, CANCELLED)",
                  "disabled": true
                },
                {
                  "key": "source",
                  "value": "PURCHASE",
                  "description": "좌석권 획득 방법 (PURCHASE, REWARD, GIFT, ADMIN)",
                  "disabled": true
                },
                {
                  "key": "valid_only",
                  "value": "true",
                  "description": "유효한 좌석권만 조회 (true/false)",
                  "disabled": true
                }
              ]
            },
            "description": "좌석권 목록을 조회합니다.\n\n필터 옵션:\n- tournament_id: 토너먼트 ID\n- user_id: 사용자 ID\n- store_id: 매장 ID (해당 매장에서 발급된 좌석권만 조회)\n- status: 좌석권 상태\n- source: 좌석권 획득 방법\n- valid_only: 유효한 좌석권만 조회\n\n응답 데이터 (각 좌석권):\n- id: 좌석권 내부 ID\n- ticket_id: 좌석권 고유 ID (UUID)\n- tournament: 토너먼트 ID\n- tournament_name: 토너먼트 이름\n- user: 사용자 ID\n- user_name: 사용자명\n- user_phone: 사용자 전화번호\n- user_nickname: 사용자 닉네임\n- store: 매장 ID\n- store_name: 매장 이름\n- status: 좌석권 상태\n- status_display: 좌석권 상태 표시명\n- source: 좌석권 획득 방법\n- source_display: 좌석권 획득 방법 표시명\n- amount: 좌석권 금액\n- used_at: 사용 시간\n- expires_at: 만료 시간\n- created_at: 생성 시간\n- updated_at: 수정 시간\n- memo: 메모\n- is_valid_ticket: 좌석권 유효 여부\n\n응답:\n- 200: 성공적으로 좌석권 목록을 반환\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "좌석권 지급",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 1,\n  \"tournament_id\": 1,\n  \"quantity\": 2,\n  \"source\": \"REWARD\",\n  \"amount\": 0,\n  \"memo\": \"예선전 승리 보상\",\n  \"expires_at\": \"2024-12-31T23:59:59Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/grant/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "grant",
                ""
              ]
            },
            "description": "사용자에게 좌석권을 지급합니다.\n\n필수 파라미터:\n- user_id: 좌석권을 받을 사용자 ID\n- tournament_id: 토너먼트 ID\n\n선택 파라미터:\n- quantity: 지급할 좌석권 수량 (기본값: 1)\n- source: 좌석권 획득 방법 (기본값: ADMIN)\n- amount: 좌석권 금액 (기본값: 0)\n- memo: 메모\n- expires_at: 만료 시간\n\n응답:\n- 200: 성공적으로 좌석권 지급\n- 400: 잘못된 요청 데이터\n- 404: 사용자 또는 토너먼트를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "좌석권 사용",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket_id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"reason\": \"토너먼트 참가\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/use/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "use",
                ""
              ]
            },
            "description": "좌석권을 사용 처리합니다.\n\n필수 파라미터:\n- ticket_id: 사용할 좌석권 ID (UUID)\n\n선택 파라미터:\n- reason: 사용 사유\n\n응답:\n- 200: 성공적으로 좌석권 사용 처리\n- 400: 유효하지 않은 좌석권 또는 잘못된 요청\n- 404: 좌석권을 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "사용자 좌석권 통계 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/user_stats/?user_id=1&tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "user_stats",
                ""
              ],
              "query": [
                {
                  "key": "user_id",
                  "value": "1",
                  "description": "사용자 ID (필수)"
                },
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (선택사항)",
                  "disabled": true
                }
              ]
            },
            "description": "사용자의 좌석권 통계를 조회합니다.\n\n필수 파라미터:\n- user_id: 사용자 ID\n\n선택 파라미터:\n- tournament_id: 특정 토너먼트의 통계만 조회\n\n응답 데이터:\n- user_id: 사용자 ID\n- user_phone: 사용자 전화번호\n- user_nickname: 사용자 닉네임\n- overall_stats: 전체 통계\n  - total_tickets: 총 좌석권 수\n  - active_tickets: 활성 좌석권 수\n  - used_tickets: 사용된 좌석권 수\n  - expired_tickets: 만료된 좌석권 수\n  - cancelled_tickets: 취소된 좌석권 수\n  - total_amount: 총 금액\n- tournament_stats: 토너먼트별 통계 (tournament_id가 없는 경우)\n\n응답:\n- 200: 성공적으로 통계 정보를 반환\n- 400: user_id 파라미터 누락\n- 404: 사용자를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "토너먼트 좌석권 현황 요약",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/tournament_summary/?tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "tournament_summary",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (필수)"
                }
              ]
            },
            "description": "토너먼트별 좌석권 현황 요약을 조회합니다.\n\n필수 파라미터:\n- tournament_id: 토너먼트 ID\n\n응답 데이터:\n- tournament_id: 토너먼트 ID\n- tournament_name: 토너먼트 이름\n- tournament_start_time: 토너먼트 시작 시간\n- tournament_ticket_quantity: 토너먼트 좌석권 수량\n- ticket_stats: 좌석권 통계\n  - total_tickets: 총 좌석권 수\n  - active_tickets: 활성 좌석권 수\n  - used_tickets: 사용된 좌석권 수\n  - expired_tickets: 만료된 좌석권 수\n  - cancelled_tickets: 취소된 좌석권 수\n  - total_amount: 총 금액\n- user_summaries: 사용자별 좌석권 현황\n\n응답:\n- 200: 성공적으로 요약 정보를 반환\n- 400: tournament_id 파라미터 누락\n- 404: 토너먼트를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "대량 좌석권 작업",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_ids\": [1, 2, 3],\n  \"tournament_id\": 1,\n  \"operation\": \"grant\",\n  \"quantity\": 2,\n  \"reason\": \"예선전 승리자들에게 좌석권 지급\"\n}\n\n// 좌석권 회수 예제:\n// {\n//   \"user_ids\": [5],\n//   \"tournament_id\": 1,\n//   \"operation\": \"cancel\",\n//   \"quantity\": 3,\n//   \"reason\": \"관리자 회수\"\n// }"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/bulk_operation/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "bulk_operation",
                ""
              ]
            },
            "description": "대량 좌석권 작업을 수행합니다.\n\n필수 파라미터:\n- user_ids: 사용자 ID 목록\n- tournament_id: 토너먼트 ID\n- operation: 작업 유형 (grant: 지급, cancel: 취소)\n\n선택 파라미터:\n- quantity: 좌석권 수량 (기본값: 1)\n- reason: 작업 사유\n\n응답:\n- 200: 성공적으로 대량 작업 완료\n- 400: 잘못된 요청 데이터\n- 404: 토너먼트 또는 일부 사용자를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "좌석권 거래내역 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/transactions/?user_id=1&tournament_id=1&transaction_type=GRANT",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "transactions",
                ""
              ],
              "query": [
                {
                  "key": "ticket_id",
                  "value": "550e8400-e29b-41d4-a716-446655440000",
                  "description": "좌석권 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "1",
                  "description": "사용자 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "transaction_type",
                  "value": "GRANT",
                  "description": "거래 유형 (GRANT, USE, EXPIRE, CANCEL, REFUND)",
                  "disabled": true
                }
              ]
            },
            "description": "좌석권 거래내역을 조회합니다.\n\n필터 옵션:\n- ticket_id: 좌석권 ID\n- user_id: 사용자 ID\n- tournament_id: 토너먼트 ID\n- transaction_type: 거래 유형\n\n응답 데이터:\n- id: 거래내역 ID\n- seat_ticket_id: 좌석권 ID\n- user_phone: 사용자 전화번호\n- tournament_name: 토너먼트 이름\n- transaction_type: 거래 유형\n- transaction_type_display: 거래 유형 표시명\n- quantity: 거래 수량\n- amount: 거래 금액\n- reason: 거래 사유\n- processed_by_name: 처리자 이름\n- created_at: 거래 시간\n\n응답:\n- 200: 성공적으로 거래내역을 반환\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장별 사용자 조회 (좌석권 기반)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/?tournament_id=1&store_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (필수)"
                },
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID (필수)"
                }
              ]
            },
            "description": "특정 토너먼트에서 특정 매장에 등록된 사용자 목록을 좌석권 기반으로 조회합니다.\n\n필수 파라미터:\n- tournament_id: 토너먼트 ID\n- store_id: 매장 ID\n\n응답 데이터 (각 좌석권):\n- id: 좌석권 내부 ID\n- ticket_id: 좌석권 고유 ID (UUID)\n- tournament: 토너먼트 ID\n- tournament_name: 토너먼트 이름\n- user: 사용자 ID\n- user_name: 사용자명\n- user_phone: 사용자 전화번호\n- user_nickname: 사용자 닉네임\n- store: 매장 ID\n- store_name: 매장 이름\n- status: 좌석권 상태 (ACTIVE, USED, EXPIRED, CANCELLED)\n- status_display: 좌석권 상태 표시명\n- source: 좌석권 획득 방법\n- source_display: 좌석권 획득 방법 표시명\n- amount: 좌석권 금액\n- used_at: 사용 시간\n- expires_at: 만료 시간\n- created_at: 생성 시간\n- updated_at: 수정 시간\n- memo: 메모\n- is_valid_ticket: 좌석권 유효 여부\n\n사용법:\n1. Frontend에서 사용자별로 그룹화하여 중복 제거\n2. 각 사용자의 활성/사용/취소된 좌석권 수량 계산\n3. 매장별 선수 목록 테이블에 표시\n\n응답:\n- 200: 성공적으로 좌석권 목록을 반환\n- 400: 필수 파라미터 누락\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장별 전체 사용자 조회 (GET 방식)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/store_users/?store_id=1&tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "store_users",
                ""
              ],
              "query": [
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID (필수)"
                },
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (선택, 특정 토너먼트 좌석권 정보 포함)"
                }
              ]
            }
          },
          "response": [
            {
              "name": "성공 응답",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/seats/tickets/store_users/?store_id=1&tournament_id=1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "seats",
                    "tickets",
                    "store_users",
                    ""
                  ],
                  "query": [
                    {
                      "key": "store_id",
                      "value": "1"
                    },
                    {
                      "key": "tournament_id",
                      "value": "1"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"store_id\": 1,\n    \"store_name\": \"ASL Poker Store 1\",\n    \"tournament_id\": \"1\",\n    \"users\": [\n        {\n            \"userId\": 10,\n            \"playerName\": \"김선수\",\n            \"playerPhone\": \"010-1234-5678\",\n            \"storeName\": \"ASL Poker Store 1\",\n            \"activeTickets\": 2,\n            \"usedTickets\": 1,\n            \"totalTickets\": 3,\n            \"hasTicket\": \"Y\",\n            \"allActiveTickets\": 5,\n            \"allUsedTickets\": 3\n        },\n        {\n            \"userId\": 15,\n            \"playerName\": \"박선수\",\n            \"playerPhone\": \"010-9876-5432\",\n            \"storeName\": \"ASL Poker Store 1\",\n            \"activeTickets\": 0,\n            \"usedTickets\": 0,\n            \"totalTickets\": 0,\n            \"hasTicket\": \"N\",\n            \"allActiveTickets\": 3,\n            \"allUsedTickets\": 2\n        }\n    ],\n    \"total_users\": 2\n}"
            }
          ],
          "description": "특정 매장에 등록된 전체 사용자 목록을 조회합니다. OPTIONS 요청을 방지하기 위해 GET 방식을 사용합니다. 해당 토너먼트 좌석권 보유자가 상단에 정렬되어 반환됩니다."
        },
        {
          "name": "매장별 전체 사용자 조회 (단순 GET 방식, OPTIONS 방지)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/store-users-simple/?store_id=1&tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                "store-users-simple",
                ""
              ],
              "query": [
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID (필수)"
                },
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (선택) - 특정 토너먼트 좌석권 정보 포함"
                }
              ]
            }
          },
          "response": [          ],
          "description": "매장에 등록된 전체 사용자 목록을 조회합니다. OPTIONS 요청을 방지하기 위해 단순 function-based view로 구현되었습니다. 해당 토너먼트 좌석권 보유자가 상단에 정렬되어 반환됩니다."
        },
        {
          "name": "최근 발급된 SEAT권 조회 (관리자 페이지용)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/tickets/?limit=50&ordering=-created_at&status=ACTIVE&user_id=1&tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "tickets",
                ""
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "50",
                  "description": "조회할 거래 내역 수 (기본값: 20)"
                },
                {
                  "key": "ordering",
                  "value": "-created_at",
                  "description": "정렬 기준 (-created_at: 최신순, created_at: 오래된순)"
                },
                {
                  "key": "status",
                  "value": "ACTIVE",
                  "description": "SEAT권 상태로 필터링 (ACTIVE, USED, EXPIRED, CANCELLED)"
                },
                {
                  "key": "user_id",
                  "value": "1",
                  "description": "특정 사용자의 거래 내역만 조회"
                },
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "특정 토너먼트의 거래 내역만 조회"
                },
                {
                  "key": "source",
                  "value": "ADMIN",
                  "description": "SEAT권 발급 방법으로 필터링 (ADMIN, PURCHASE, REWARD, GIFT)"
                }
              ]
            },
            "description": "최근 발급된 SEAT권 목록을 조회합니다. 관리자 페이지의 최근 발급된 SEAT권 테이블에서 사용됩니다. TicketIssuePage.jsx와 동일한 엔드포인트를 사용합니다.\n\n응답 데이터 (각 SEAT권):\n- id: SEAT권 내부 ID\n- ticket_id: SEAT권 고유 ID (UUID)\n- tournament: 토너먼트 ID\n- tournament_name: 토너먼트 이름\n- user: 사용자 ID\n- user_name: 사용자명 (nickname 또는 username)\n- user_phone: 사용자 전화번호\n- store: 매장 ID\n- store_name: 매장 이름\n- status: SEAT권 상태 (ACTIVE, USED, EXPIRED, CANCELLED)\n- source: SEAT권 발급 방법 (ADMIN, PURCHASE, REWARD, GIFT)\n- amount: SEAT권 금액\n- memo: 발급 메모\n- used_at: 사용 시간\n- expires_at: 만료 시간\n- created_at: 발급 시간\n- updated_at: 수정 시간\n\n필터 옵션:\n- limit: 조회할 SEAT권 수 (기본값: 20, 최대: 100)\n- ordering: 정렬 기준 (-created_at 권장)\n- status: SEAT권 상태로 필터링\n- source: 발급 방법으로 필터링\n- user_id: 특정 사용자의 SEAT권만 조회\n- tournament_id: 특정 토너먼트의 SEAT권만 조회\n- store_id: 특정 매장의 SEAT권만 조회\n\n응답:\n- 200: 성공적으로 SEAT권 목록을 반환\n- 400: 잘못된 파라미터\n- 500: 서버 내부 오류"
          },
          "response": [
            {
              "name": "성공 응답 예시",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/seats/tickets/?limit=10&ordering=-created_at",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "seats",
                    "tickets",
                    ""
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "ordering",
                      "value": "-created_at"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"count\": 150,\n    \"next\": \"http://localhost:8000/api/v1/seats/tickets/?limit=10&offset=10&ordering=-created_at\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"ticket_id\": \"550e8400-e29b-41d4-a716-446655440000\",\n            \"tournament\": 1,\n            \"tournament_name\": \"월요일 토너먼트\",\n            \"user\": 10,\n            \"user_name\": \"김선수\",\n            \"user_phone\": \"010-1234-5678\",\n            \"store\": 1,\n            \"store_name\": \"ASL Poker Store 1\",\n            \"status\": \"ACTIVE\",\n            \"source\": \"ADMIN\",\n            \"amount\": 0,\n            \"memo\": \"관리자 지급: 프로모션 이벤트\",\n            \"used_at\": null,\n            \"expires_at\": null,\n            \"created_at\": \"2024-01-15T10:30:00Z\",\n            \"updated_at\": \"2024-01-15T10:30:00Z\"\n        },\n        {\n            \"id\": 2,\n            \"ticket_id\": \"550e8400-e29b-41d4-a716-446655440001\",\n            \"tournament\": 1,\n            \"tournament_name\": \"월요일 토너먼트\",\n            \"user\": 15,\n            \"user_name\": \"박선수\",\n            \"user_phone\": \"010-9876-5432\",\n            \"store\": 1,\n            \"store_name\": \"ASL Poker Store 1\",\n            \"status\": \"USED\",\n            \"source\": \"ADMIN\",\n            \"amount\": 0,\n            \"memo\": \"토너먼트 참가용\",\n            \"used_at\": \"2024-01-15T10:25:00Z\",\n            \"expires_at\": null,\n            \"created_at\": \"2024-01-15T10:20:00Z\",\n            \"updated_at\": \"2024-01-15T10:25:00Z\"\n        }\n    ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "매장",
      "description": "매장 관련 API 엔드포인트",
      "item": [
        {
          "name": "휴대폰 번호로 사용자 검색",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장관리자 인증 토큰"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/store/search-user/?phone=01012345678",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "search-user",
                ""
              ],
              "query": [
                {
                  "key": "phone",
                  "value": "01012345678",
                  "description": "검색할 휴대폰 번호 (하이픈 포함/미포함 모두 가능)"
                }
              ]
            },
            "description": "휴대폰 번호로 기존 사용자를 검색합니다.\n\n🔧 2024.12 업데이트: 404 에러 처리 개선 & 닉네임 필드 추가\n- 사용자가 없을 때 404 응답을 정상 처리로 변경\n- nickname 필드 추가로 이름(닉네임) 형태 표시 지원\n- birth_date, gender_digit 필드 추가 지원\n\n응답 (사용자 발견 시):\n{\n  \"found\": true,\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"기존 호환용\",\n    \"nickname\": \"웃긴올빼미\",\n    \"first_name\": \"홍길\",\n    \"last_name\": \"김\",\n    \"email\": \"user@example.com\",\n    \"phone\": \"010-1234-5678\",\n    \"birth_date\": \"901225\",\n    \"gender_digit\": \"1\"\n  }\n}\n\n응답 (사용자 없음 시):\n{\n  \"found\": false,\n  \"message\": \"해당 휴대폰 번호로 등록된 사용자가 없습니다.\"\n}\n\n표시 형태: 홍길동(웃긴올빼미)\n- 이름: first_name + last_name\n- 닉네임: nickname 필드 (괄호 안에 표시)\n\n상태 코드:\n- 200: 성공 (사용자 발견/미발견 모두)\n- 400: 잘못된 요청 (phone 파라미터 누락)\n- 401: 인증되지 않은 요청\n- 403: 매장관리자 권한 필요"
          },
          "response": []
        },
        {
          "name": "선수 토너먼트 참가 등록",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장관리자 인증 토큰"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tournament_id\": 1,\n  \"phone_number\": \"010-1234-5678\",\n  \"user_id\": 1,\n  \"nickname\": \"플레이어1\",\n  \"lastname\": \"김\",\n  \"firstname\": \"홍길\",\n  \"email\": \"newuser@example.com\",\n  \"birth_date\": \"901225\",\n  \"gender_digit\": \"1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/register-player/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "register-player",
                ""
              ]
            },
            "description": "선수를 토너먼트에 참가 등록시킵니다.\n\n🔧 2024.12 업데이트: 이름 필드 분리 & 주민번호 정보 추가\n- username 필드를 lastname, firstname으로 분리\n- birth_date(생년월일 6자리), gender_digit(성별구분 1자리) 필드 추가\n- 404 에러 처리 개선으로 사용자 경험 향상\n- 기존 데이터베이스 birth_date(DateField), gender(M/F) 필드 활용\n\n요청 본문 (기존 사용자):\n{\n  \"tournament_id\": 1,\n  \"phone_number\": \"010-1234-5678\",\n  \"user_id\": 1\n}\n\n요청 본문 (신규 사용자):\n{\n  \"tournament_id\": 1,\n  \"phone_number\": \"010-1234-5678\",\n  \"lastname\": \"김\",\n  \"firstname\": \"홍길\",\n  \"email\": \"newuser@example.com\",\n  \"birth_date\": \"901225\",\n  \"gender_digit\": \"1\"\n}\n\n필수 필드:\n- tournament_id: 토너먼트 ID\n- phone_number: 휴대폰 번호\n- 기존 사용자: user_id\n- 신규 사용자: lastname, firstname, email\n\n선택 필드:\n- birth_date: 생년월일 6자리 (YYMMDD, 데이터베이스 DateField로 변환)\n- gender_digit: 성별구분 숫자 (1: 남자, 2: 여자, 데이터베이스 gender 필드로 변환)\n\n응답:\n- 200: 성공적으로 참가 등록\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 매장관리자 권한 필요\n- 404: 토너먼트 또는 사용자를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "매장 방문자 목록 조회",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "store_id",
                  "value": "1",
                  "type": "text",
                  "description": "매장 ID"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/users/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "users",
                ""
              ]
            },
            "description": "특정 매장의 방문자 목록을 조회합니다.\n\n응답:\n- 200: 성공적으로 방문자 목록을 반환\n- 400: 잘못된 매장 ID\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 매장을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "매장별 사용자 검색",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "store_name",
                  "value": "ASL 홀덤펍",
                  "type": "text",
                  "description": "매장 이름"
                },
                {
                  "key": "username",
                  "value": "user1",
                  "type": "text",
                  "description": "사용자 이름"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/search/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "search",
                ""
              ]
            },
            "description": "매장 이름과 사용자 이름으로 사용자를 검색합니다.\n\n응답:\n- 200: 성공적으로 사용자 정보를 반환\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 사용자 또는 매장을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "매장 목록 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}",
                "description": "관리자 인증 토큰"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/stores/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stores", ""]
            },
            "description": "모든 매장 목록을 조회합니다.\n\n⭐ 2025.01 매장 관리 기능 추가:\n- 관리자 및 매장 관리자를 위한 CRUD 기능 완전 구현\n- React 기반 StoreManagement.jsx 페이지와 연동\n- 실시간 통계 카드 및 확장 가능한 테이블 UI 제공\n\n응답 필드:\n- id: 매장 ID\n- name: 매장명\n- address: 매장 주소\n- description: 매장 설명\n- status: 매장 상태 (ACTIVE: 운영중, INACTIVE: 휴업중, CLOSED: 폐업)\n- latitude: 위도\n- longitude: 경도\n- phone_number: 매장 전화번호\n- open_time: 오픈 시간\n- close_time: 마감 시간\n- manager_name: 매니저 이름\n- manager_phone: 매니저 연락처\n- max_capacity: 최대 수용 인원\n- owner: 매장 소유자 ID\n- created_at: 생성일시\n- updated_at: 수정일시\n- tournament_count: 토너먼트 수 (실시간 계산)\n\n권한:\n- 누구나 조회 가능 (AllowAny)\n- 정렬: ID 순서 (한글 정렬 문제 해결)\n\n응답:\n- 200: 성공적으로 매장 목록 반환\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 상세 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/stores/1/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stores", "1", ""]
            },
            "description": "특정 매장의 상세 정보를 조회합니다.\n\n파라미터:\n- store_id: 매장 ID (URL 경로에 포함)\n\n응답:\n- 200: 성공적으로 매장 상세 정보 반환\n- 404: 해당 매장을 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 생성 (관리자 전용)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}",
                "description": "관리자 인증 토큰 (관리자만 매장 생성 가능)"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {"key": "name", "value": "ASL 강남점", "type": "text", "description": "매장명 (필수)"},
                {"key": "owner", "value": "1", "type": "text", "description": "매장 소유자 유저 ID (필수)"},
                {"key": "address", "value": "서울특별시 강남구 테헤란로 123", "type": "text", "description": "매장 주소 (필수)"},
                {"key": "description", "value": "강남역 근처 프리미엄 홀덤 매장입니다.", "type": "text", "description": "매장 설명"},
                {"key": "phone_number", "value": "02-1234-5678", "type": "text", "description": "매장 전화번호"},
                {"key": "manager_name", "value": "김강남", "type": "text", "description": "관리자 이름"},
                {"key": "manager_phone", "value": "010-1234-5678", "type": "text", "description": "관리자 연락처"},
                {"key": "open_time", "value": "10:00", "type": "text", "description": "오픈 시간 (HH:MM)"},
                {"key": "close_time", "value": "23:59", "type": "text", "description": "마감 시간 (HH:MM)"},
                {"key": "max_capacity", "value": "80", "type": "text", "description": "최대 수용 인원 (1-1000)"},
                {"key": "status", "value": "ACTIVE", "type": "text", "description": "매장 상태 (기본값: ACTIVE)"},
                {"key": "latitude", "value": "37.497942", "type": "text", "description": "위도"},
                {"key": "longitude", "value": "127.027618", "type": "text", "description": "경도"},
                {"key": "image", "type": "file", "description": "매장 이미지 파일"}
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/stores/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stores", ""]
            },
            "description": "새로운 매장을 생성합니다. (관리자 전용)\n\n⭐ 매장 생성 제약사항:\n- 관리자(is_staff 또는 is_superuser)만 매장 생성 가능\n- 매장명 중복 검사 자동 실행\n- 전화번호 형식 자동 검증 (정규식 패턴)\n- 최대 수용 인원 범위 검증 (1-1000명)\n\n필수 필드:\n- name: 매장명 (중복 불가)\n- owner: 매장 소유자 유저 ID\n- address: 매장 주소\n\n선택 필드:\n- description: 매장 설명\n- phone_number: 매장 전화번호 (형식 검증)\n- manager_name: 관리자 이름\n- manager_phone: 관리자 연락처 (형식 검증)\n- open_time, close_time: 운영 시간\n- max_capacity: 최대 수용 인원 (기본값: 50)\n- status: 매장 상태 (기본값: ACTIVE)\n- latitude, longitude: 지도 좌표\n- image: 매장 이미지 파일\n\n유효성 검증:\n- 매장명: 필수, 중복 검사\n- 주소: 필수\n- 전화번호: 정규식 패턴 '^(\\d{2,3}-?\\d{3,4}-?\\d{4})$'\n- 최대 수용 인원: 1-1000 범위\n\n응답:\n- 201: 성공적으로 매장 생성\n- 400: 유효성 검사 실패 (상세 오류 메시지 포함)\n- 401: 인증되지 않은 요청\n- 403: 매장 생성 권한 없음 (관리자 권한 필요)\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장 관리자 또는 관리자 인증 토큰"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {"key": "name", "value": "ASL 강남점 (수정)", "type": "text", "description": "매장명 (필수)"},
                {"key": "address", "value": "서울특별시 강남구 테헤란로 456", "type": "text", "description": "매장 주소 (필수)"},
                {"key": "description", "value": "수정된 매장 설명", "type": "text", "description": "매장 설명"},
                {"key": "phone_number", "value": "02-9876-5432", "type": "text", "description": "매장 전화번호"},
                {"key": "manager_name", "value": "이강남", "type": "text", "description": "관리자 이름"},
                {"key": "manager_phone", "value": "010-9876-5432", "type": "text", "description": "관리자 연락처"},
                {"key": "open_time", "value": "09:00", "type": "text", "description": "오픈 시간"},
                {"key": "close_time", "value": "01:00", "type": "text", "description": "마감 시간"},
                {"key": "max_capacity", "value": "100", "type": "text", "description": "최대 수용 인원"},
                {"key": "status", "value": "ACTIVE", "type": "text", "description": "매장 상태"},
                {"key": "image", "type": "file", "description": "새 매장 이미지 파일"}
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/stores/1/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stores", "1", ""]
            },
            "description": "매장 정보를 수정합니다.\n\n⭐ 권한 관리:\n- 관리자(is_staff, is_superuser): 모든 매장 수정 가능\n- 매장 소유자(is_store_owner + owner 일치): 자신의 매장만 수정 가능\n\n수정 가능한 필드:\n- name: 매장명 (중복 검사, 현재 매장 제외)\n- address: 매장 주소\n- description: 매장 설명\n- phone_number: 매장 전화번호\n- manager_name: 관리자 이름\n- manager_phone: 관리자 연락처\n- open_time, close_time: 운영 시간\n- max_capacity: 최대 수용 인원\n- status: 매장 상태\n- latitude, longitude: 지도 좌표\n- image: 매장 이미지\n\n부분 수정 지원:\n- partial=True로 설정되어 필요한 필드만 전송 가능\n- 전송하지 않은 필드는 기존 값 유지\n\n유효성 검증:\n- 매장명: 중복 검사 (현재 매장 제외)\n- 전화번호: 형식 검증\n- 최대 수용 인원: 1-1000 범위\n\n응답:\n- 200: 성공적으로 매장 정보 수정\n- 400: 유효성 검사 실패\n- 401: 인증되지 않은 요청\n- 403: 매장 수정 권한 없음\n- 404: 해당 매장을 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 삭제 (소프트 삭제)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장 관리자 또는 관리자 인증 토큰"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/stores/1/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "stores", "1", ""]
            },
            "description": "매장을 삭제합니다. (소프트 삭제 방식)\n\n⭐ 소프트 삭제 방식:\n- 실제 데이터베이스에서 삭제하지 않음\n- 매장 상태를 'CLOSED'로 변경\n- 관련된 모든 데이터 보존 (토너먼트, SEAT권 등)\n- 데이터 무결성 및 이력 보존\n\n권한 관리:\n- 관리자(is_staff, is_superuser): 모든 매장 삭제 가능\n- 매장 소유자(is_store_owner + owner 일치): 자신의 매장만 삭제 가능\n\n삭제 후 동작:\n- 매장 상태: ACTIVE/INACTIVE → CLOSED\n- 관련 데이터: 모두 보존\n- UI에서: '폐업' 상태로 표시\n- 필터링: 필요시 CLOSED 상태 매장 제외 가능\n\n응답:\n- 200: 성공적으로 매장 삭제 (상태 변경)\n  - message: \"매장 '매장명'이(가) 삭제되었습니다.\"\n- 401: 인증되지 않은 요청\n- 403: 매장 삭제 권한 없음\n- 404: 해당 매장을 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 정보 업데이트",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (매장 관리자 권한 필요)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ASL Poker Store 업데이트\",\n  \"address\": \"서울시 강남구 테헤란로 456\",\n  \"description\": \"업데이트된 프리미엄 홀덤 매장\",\n  \"status\": \"ACTIVE\",\n  \"phone_number\": \"02-1234-5678\",\n  \"open_time\": \"09:00\",\n  \"close_time\": \"23:00\",\n  \"manager_name\": \"김매니저\",\n  \"manager_phone\": \"010-1234-5678\",\n  \"max_capacity\": 80\n}",
              "description": "매장 정보 업데이트 데이터"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/store/info/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "info",
                ""
              ]
            },
            "description": "현재 로그인한 매장 관리자의 매장 정보를 업데이트합니다.\n\n요청 본문 (모든 필드 선택사항):\n- name: 매장명\n- address: 매장 주소\n- description: 매장 설명\n- status: 매장 상태 (ACTIVE, INACTIVE, CLOSED)\n- phone_number: 매장 전화번호\n- open_time: 오픈 시간 (HH:MM 형식)\n- close_time: 마감 시간 (HH:MM 형식)\n- manager_name: 매니저 이름\n- manager_phone: 매니저 연락처\n- max_capacity: 최대 수용 인원\n\n응답:\n- 200: 성공적으로 매장 정보 업데이트\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 404: 연결된 매장 정보가 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 정보 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (매장 관리자 권한 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/store/info/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "info",
                ""
              ]
            },
            "description": "현재 로그인한 매장 관리자의 매장 정보를 조회합니다.\n\n🗺️ 2025.01 지도 기능 업데이트:\n- latitude, longitude 필드를 통한 카카오 지도 연동 지원\n- 모바일 웹앱에서 매장 위치 표시 기능 추가\n- 사용자 위치 기반 매장 거리 계산 지원\n- 매장 마커 클릭 시 상세 정보 모달 표시\n\n응답 필드:\n- id: 매장 ID\n- name: 매장명\n- address: 매장 주소\n- description: 매장 설명\n- status: 매장 상태\n- latitude: 위도 (지도 표시용) ⭐ 지도 기능\n- longitude: 경도 (지도 표시용) ⭐ 지도 기능\n- phone_number: 매장 전화번호\n- open_time: 오픈 시간\n- close_time: 마감 시간\n- manager_name: 매니저 이름\n- manager_phone: 매니저 연락처\n- max_capacity: 최대 수용 인원\n- created_at: 생성일시\n- updated_at: 수정일시\n- tournament_count: 토너먼트 수\n\n지도 기능 관련:\n- /mobile/common/store-map: 카카오 지도로 모든 매장 위치 표시\n- /mobile/common/store-search: 목록 보기와 지도 보기 토글 버튼\n- 사용자 현재 위치 표시 및 매장까지의 거리 계산\n- 매장 상태에 따른 마커 색상 구분 (영업중: 초록색, 휴업중: 회색)\n\n응답:\n- 200: 성공적으로 매장 정보 조회\n- 401: 인증되지 않은 요청\n- 404: 연결된 매장 정보가 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "매장 지도 데이터 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/stores/?format=json",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "stores",
                ""
              ],
              "query": [
                {
                  "key": "format",
                  "value": "json",
                  "description": "응답 형식"
                }
              ]
            },
            "description": "🗺️ 카카오 지도 표시용 매장 데이터를 조회합니다.\n\n주요 기능:\n- 위도/경도가 설정된 모든 매장 정보 조회\n- 카카오 지도 마커 생성용 데이터 제공\n- 매장 상태별 마커 색상 구분 지원\n- 사용자 위치 기반 거리 계산 지원\n\n🎯 사용처:\n- /mobile/common/store-map 페이지\n- /mobile/common/store-search 페이지의 지도 토글\n- Android 앱의 매장 지도 기능\n\n응답 필드 (각 매장):\n- id: 매장 ID\n- name: 매장명\n- address: 매장 주소\n- description: 매장 설명\n- status: 매장 상태 (ACTIVE: 영업중, INACTIVE: 휴업중, CLOSED: 폐업)\n- latitude: 위도 (Decimal, 지도 마커 표시용)\n- longitude: 경도 (Decimal, 지도 마커 표시용)\n- phone_number: 매장 전화번호\n- open_time: 오픈 시간 (HH:MM:SS)\n- close_time: 마감 시간 (HH:MM:SS)\n- manager_name: 매니저 이름\n- manager_phone: 매니저 연락처\n- max_capacity: 최대 수용 인원\n- image: 매장 이미지 URL\n- created_at: 생성일시\n- updated_at: 수정일시\n\n지도 마커 구현 가이드:\n```javascript\n// 매장 상태에 따른 마커 색상\nconst markerColor = store.status === 'ACTIVE' ? '#28a745' : '#6c757d';\n\n// 마커 정보창 내용\nconst infoContent = `\n  <div style=\"padding:10px;min-width:200px;\">\n    <h6>${store.name}</h6>\n    <p>${store.address}</p>\n    <span class=\"badge\" style=\"background-color:${markerColor}\">\n      ${store.status === 'ACTIVE' ? '영업중' : '휴업중'}\n    </span>\n  </div>\n`;\n```\n\n필터링 조건:\n- latitude와 longitude가 null이 아닌 매장만 반환\n- latitude와 longitude가 '0.000000'이 아닌 매장만 반환\n- 유효한 위치 정보를 가진 매장만 지도에 표시\n\n응답:\n- 200: 성공적으로 매장 목록 반환\n- 500: 서버 내부 오류"
          },
          "response": []
        }
      ]
    },
    {
      "name": "사용자",
      "description": "사용자 관련 API 엔드포인트",
      "item": [
        {
          "name": "사용자 생성",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "username",
                  "value": "new_user",
                  "type": "text",
                  "description": "사용자 이름 (필수)"
                },
                {
                  "key": "email",
                  "value": "user@example.com",
                  "type": "text",
                  "description": "이메일 주소 (필수)"
                },
                {
                  "key": "password",
                  "value": "password123",
                  "type": "text",
                  "description": "비밀번호 (필수)"
                },
                {
                  "key": "first_name",
                  "value": "홍",
                  "type": "text",
                  "description": "이름"
                },
                {
                  "key": "last_name",
                  "value": "길동",
                  "type": "text",
                  "description": "성"
                },
                {
                  "key": "phone",
                  "value": "010-1234-5678",
                  "type": "text",
                  "description": "전화번호 (010-1234-5678 형식)"
                },
                {
                  "key": "is_staff",
                  "value": "true",
                  "type": "text",
                  "description": "스태프 권한 여부 (true/false)"
                },
                {
                  "key": "is_superuser",
                  "value": "true",
                  "type": "text",
                  "description": "관리자 권한 여부 (true/false)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                ""
              ]
            },
            "description": "새로운 사용자를 생성합니다.\n\n응답:\n- 201: 성공적으로 사용자 생성\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 409: 이미 존재하는 사용자 이름 또는 이메일"
          },
          "response": []
        },
        {
          "name": "사용자 정보 조회",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "username",
                  "value": "user1",
                  "type": "text",
                  "description": "사용자 이름"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/get/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "get",
                ""
              ]
            },
            "description": "사용자 이름으로 사용자 정보를 조회합니다.\n\n응답:\n- 200: 성공적으로 사용자 정보를 반환\n- 400: 잘못된 사용자 이름\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 사용자를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "사용자 정보 업데이트",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}",
                "description": "관리자 액세스 토큰 (필수)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 1,\n  \"nickname\": \"수정된닉네임\",\n  \"email\": \"updated@example.com\",\n  \"phone\": \"010-9876-5432\",\n  \"role\": \"STORE_OWNER\",\n  \"is_active\": true,\n  \"is_verified\": true,\n  \"first_name\": \"수정된이름\",\n  \"last_name\": \"수정된성\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/update_user/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "update_user",
                ""
              ]
            },
            "description": "사용자 정보를 업데이트합니다.\n\n⚠️ 필수 검증 사항:\n- user_id: 사용자 ID (필수)\n- email: 유효한 이메일 주소 (필수, @ 포함)\n- phone: 전화번호 (필수, 010-1234-5678 형식)\n- role: 사용자 역할 (필수, ADMIN, STORE_OWNER, USER, GUEST 중 하나)\n\n선택 필드:\n- nickname: 닉네임 (선택사항, null 허용)\n- is_active: 계정 활성화 여부 (boolean, 기본값: true)\n- is_verified: 계정 인증 여부 (boolean, 기본값: false)\n- first_name: 이름 (선택사항)\n- last_name: 성 (선택사항)\n\n일반적인 400 오류 원인:\n1. phone 필드 누락 또는 잘못된 형식\n2. role 필드가 유효하지 않은 값\n3. email 필드 누락 또는 @ 기호 없음\n4. user_id 필드 누락\n\n응답:\n- 200: 성공적으로 사용자 정보 업데이트\n  - success: true\n  - message: 성공 메시지\n  - user: 업데이트된 사용자 정보\n- 400: 잘못된 요청 데이터\n  - success: false\n  - error: 오류 메시지\n  - details: 필드별 검증 오류 (시리얼라이저 오류)\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 사용자를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "사용자 삭제",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}",
                "description": "관리자 액세스 토큰 (필수)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/delete_user/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "delete_user",
                ""
              ]
            },
            "description": "사용자를 삭제합니다. (실제로는 비활성화)\n\n요청 본문:\n- user_id: 삭제할 사용자 ID (필수)\n\n응답:\n- 200: 성공적으로 사용자 비활성화\n  - success: true\n  - message: 성공 메시지\n- 400: 잘못된 사용자 ID\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 사용자를 찾을 수 없음\n- 500: 서버 내부 오류"
          },
          "response": []
        },
        {
          "name": "모든 사용자 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/all/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "all",
                ""
              ]
            },
            "description": "모든 사용자 목록을 조회합니다. (관리자 전용)\n\n응답:\n- 200: 성공적으로 사용자 목록을 반환\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "게스트 사용자 생성",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}",
                "description": "관리자 액세스 토큰 (필수)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nickname\": \"게스트123\",\n  \"memo\": \"테스트용 게스트 계정\",\n  \"expires_days\": 30\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/create_guest_user/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "create_guest_user",
                ""
              ]
            },
            "description": "게스트 사용자를 생성합니다.\n\n요청 본문:\n- nickname: 게스트 닉네임 (선택사항, 비워두면 자동 생성)\n- memo: 메모 (선택사항)\n- expires_days: 만료일 (일 단위, 기본값: 30일)\n\n특징:\n- username 필드는 임시 전화번호로 자동 설정됩니다\n- 임시 전화번호는 999-XXXX-XXXX 형태로 생성됩니다\n- 닉네임은 자동 생성되거나 사용자가 입력할 수 있습니다\n- 중복 방지를 위해 전화번호와 닉네임은 자동으로 고유하게 생성됩니다\n\n응답:\n- 201: 성공적으로 게스트 사용자 생성\n  - success: true\n  - message: 성공 메시지\n  - guest_user: 생성된 게스트 사용자 정보\n    - id: 사용자 ID\n    - nickname: 닉네임\n    - phone: 임시 전화번호 (username과 동일)\n    - email: 임시 이메일\n    - role: GUEST\n    - memo: 메모\n    - expires_days: 만료일\n    - created_at: 생성일\n    - temp_password: 임시 비밀번호 (개발용)\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 500: 서버 내부 오류 (username 중복 등)"
          },
          "response": []
        },
        {
          "name": "사용자 통계 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/stats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "stats",
                ""
              ]
            },
            "description": "사용자 통계 정보를 조회합니다. (관리자 전용)\n\n응답:\n- 200: 성공적으로 통계 정보를 반환\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "전화번호로 사용자 정보 조회 (Accounts)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "인증 토큰"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone\": \"010-1234-5678\"\n}",
              "description": "전화번호 (010-1234-5678 형식)"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/accounts/users/get_user_by_phone/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "accounts",
                "users",
                "get_user_by_phone",
                ""
              ]
            },
            "description": "전화번호를 사용하여 사용자 정보를 조회합니다. (Accounts API)\n\n응답:\n- 200: 성공적으로 사용자 정보를 반환\n- 400: 잘못된 전화번호 형식\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 사용자를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "전화번호로 사용자 검색 (Store)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장관리자 인증 토큰"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/store/search-user/?phone=010-1234-5678",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "store",
                "search-user",
                ""
              ],
              "query": [
                {
                  "key": "phone",
                  "value": "010-1234-5678",
                  "description": "검색할 전화번호 (하이픈 포함 또는 제외 모두 가능)"
                }
              ]
            },
            "description": "매장에서 휴대폰 번호로 사용자를 검색합니다. 여러 형태의 전화번호 형식을 지원합니다.\n\n매장관리자 전용 API\n\n응답 데이터:\n- found: 사용자 발견 여부 (boolean)\n- user: 사용자 정보 객체 (found가 true인 경우)\n  - id: 사용자 ID\n  - username: 사용자명 (닉네임 또는 전화번호)\n  - nickname: 닉네임\n  - email: 이메일\n  - phone: 전화번호\n  - first_name: 이름\n  - last_name: 성\n  - birth_date: 생년월일 (YYMMDD 형식)\n  - gender_digit: 성별 구분 (1: 남성, 2: 여성)\n- message: 결과 메시지 (found가 false인 경우)\n\n응답:\n- 200: 성공적으로 검색 완료\n- 400: 전화번호가 누락됨\n- 401: 인증되지 않은 요청\n- 403: 매장관리자 권한 필요\n- 500: 서버 내부 오류"
          },
          "response": [
            {
              "name": "사용자 발견",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{store_manager_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/store/search-user/?phone=010-1234-5678",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "store",
                    "search-user",
                    ""
                  ],
                  "query": [
                    {
                      "key": "phone",
                      "value": "010-1234-5678"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"found\": true,\n  \"user\": {\n    \"id\": 15,\n    \"username\": \"홍길동\",\n    \"nickname\": \"홍길동\",\n    \"email\": \"hong@example.com\",\n    \"phone\": \"010-1234-5678\",\n    \"first_name\": \"길동\",\n    \"last_name\": \"홍\",\n    \"birth_date\": \"901225\",\n    \"gender_digit\": \"1\"\n  }\n}"
            },
            {
              "name": "사용자 없음",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{store_manager_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/store/search-user/?phone=010-9999-9999",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "store",
                    "search-user",
                    ""
                  ],
                  "query": [
                    {
                      "key": "phone",
                      "value": "010-9999-9999"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"found\": false,\n  \"message\": \"해당 휴대폰 번호로 등록된 사용자가 없습니다.\"\n}"
            }
          ]
        },
        {
          "name": "내 QR 코드 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "사용자 인증 토큰"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/user/my-qr-code/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "user",
                "my-qr-code",
                ""
              ]
            },
            "description": "현재 로그인한 사용자의 QR 코드 정보를 조회합니다.\n\n인증 필요: Bearer Token\n\n기능:\n- QR 코드가 없는 경우 자동으로 생성\n- QR 코드 이미지 URL 반환\n- 상세한 오류 처리 및 로깅\n\n응답 데이터:\n- success: 성공 여부 (boolean)\n- user_info: 사용자 정보 객체\n  - id: 사용자 ID\n  - phone: 전화번호\n  - nickname: 닉네임\n  - email: 이메일\n  - qr_code_uuid: QR 코드 고유 식별자\n  - qr_code_url: QR 코드 이미지 URL (절대 URL)\n\n응답 코드:\n- 200: 성공적으로 QR 코드 정보를 반환\n- 401: 인증되지 않은 요청\n- 500: QR 코드 생성 실패 또는 서버 내부 오류\n\n수정사항:\n- BytesIO buffer 포인터 문제 해결\n- 무한 재귀 호출 방지\n- 상세한 오류 로깅 추가\n- QR 코드 URL 생성 실패 처리"
          },
          "response": [
            {
              "name": "성공 응답",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/user/my-qr-code/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "user",
                    "my-qr-code",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"user_info\": {\n    \"id\": 13,\n    \"phone\": \"010-1111-2222\",\n    \"nickname\": \"테스트유저\",\n    \"email\": \"testuser@example.com\",\n    \"qr_code_uuid\": \"abc123-def456-ghi789\",\n    \"qr_code_url\": \"http://localhost:8000/media/qr_codes/qr_code_abc123-def456-ghi789.png\"\n  }\n}"
            }
          ]
        },
        {
          "name": "QR 코드 스캔",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{store_manager_token}}",
                "description": "매장관리자 인증 토큰"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qr_data\": \"user_id:13,uuid:abc123-def456-ghi789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/user/scan-qr-code/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "user",
                "scan-qr-code",
                ""
              ]
            },
            "description": "QR 코드를 스캔하여 사용자 정보를 조회합니다.\n매장관리자만 사용할 수 있는 API입니다.\n\n인증 필요: Bearer Token (매장관리자)\n\n요청 본문:\n- qr_data: QR 코드에서 읽은 데이터 (예: \"user_id:13,uuid:abc123...\")\n\n응답 데이터:\n- success: 성공 여부 (boolean)\n- user_info: 사용자 정보 객체\n  - id: 사용자 ID\n  - phone: 전화번호\n  - nickname: 닉네임\n  - email: 이메일\n  - role: 사용자 역할\n  - is_active: 활성 상태\n  - created_at: 계정 생성일\n\n응답:\n- 200: 성공적으로 사용자 정보를 반환\n- 400: 잘못된 QR 코드 형식\n- 401: 인증되지 않은 요청\n- 403: 매장관리자 권한 필요\n- 404: 유효하지 않은 QR 코드\n- 500: 서버 내부 오류"
          },
          "response": [
            {
              "name": "성공 응답",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{store_manager_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"qr_data\": \"user_id:13,uuid:abc123-def456-ghi789\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/user/scan-qr-code/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "user",
                    "scan-qr-code",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"user_info\": {\n    \"id\": 13,\n    \"phone\": \"010-1111-2222\",\n    \"nickname\": \"테스트유저\",\n    \"email\": \"testuser@example.com\",\n    \"role\": \"USER\",\n    \"is_active\": true,\n    \"created_at\": \"2024-12-07T10:30:00Z\"\n  }\n}"
            },
            {
              "name": "잘못된 QR 코드",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{store_manager_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"qr_data\": \"invalid_qr_data\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/user/scan-qr-code/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "user",
                    "scan-qr-code",
                    ""
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"올바르지 않은 QR 코드 형식입니다.\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "공지사항",
      "description": "공지사항 관련 API 엔드포인트",
      "item": [
        {
          "name": "공지사항 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/?notice_type=GENERAL&priority=HIGH&is_pinned=true&search=공지&ordering=-created_at",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                ""
              ],
              "query": [
                {
                  "key": "notice_type",
                  "value": "GENERAL",
                  "description": "공지사항 타입 (GENERAL: 전체 공지사항, MEMBER_ONLY: 회원 전용 공지사항)",
                  "disabled": true
                },
                {
                  "key": "priority",
                  "value": "HIGH",
                  "description": "중요도 (LOW: 낮음, NORMAL: 보통, HIGH: 높음, URGENT: 긴급)",
                  "disabled": true
                },
                {
                  "key": "is_pinned",
                  "value": "true",
                  "description": "고정 공지사항 여부 (true/false)",
                  "disabled": true
                },
                {
                  "key": "author",
                  "value": "admin",
                  "description": "작성자 이름으로 필터링",
                  "disabled": true
                },
                {
                  "key": "created_after",
                  "value": "2024-01-01T00:00:00Z",
                  "description": "지정된 날짜 이후에 작성된 공지사항",
                  "disabled": true
                },
                {
                  "key": "created_before",
                  "value": "2024-12-31T23:59:59Z",
                  "description": "지정된 날짜 이전에 작성된 공지사항",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "공지",
                  "description": "제목 또는 내용에서 검색",
                  "disabled": true
                },
                {
                  "key": "ordering",
                  "value": "-created_at",
                  "description": "정렬 기준 (created_at, -created_at, view_count, -view_count, priority, -priority)",
                  "disabled": true
                }
              ]
            },
            "description": "공지사항 목록을 조회합니다.\n\n권한:\n- 전체 공지사항: 모든 사용자 조회 가능\n- 회원 전용 공지사항: 로그인한 사용자만 조회 가능\n\n응답 데이터:\n- id: 공지사항 ID\n- title: 제목\n- notice_type: 공지사항 타입\n- notice_type_display: 공지사항 타입 표시명\n- priority: 중요도\n- priority_display: 중요도 표시명\n- author_name: 작성자 이름\n- is_published: 공개 여부\n- is_pinned: 상단 고정 여부\n- view_count: 조회수\n- created_at: 생성 시간\n- updated_at: 수정 시간\n- start_date: 공지 시작일\n- end_date: 공지 종료일\n- is_read: 읽음 여부 (로그인한 사용자만)\n- is_active: 활성화 여부\n\n응답:\n- 200: 성공적으로 공지사항 목록을 반환"
          },
          "response": []
        },
        {
          "name": "공지사항 상세 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (선택사항)",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/1/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "1",
                ""
              ]
            },
            "description": "특정 공지사항의 상세 정보를 조회합니다.\n\n기능:\n- 조회 시 자동으로 조회수 증가\n- 로그인한 사용자의 경우 읽음 상태 자동 생성\n\n응답 데이터:\n- id: 공지사항 ID\n- title: 제목\n- content: 내용\n- notice_type: 공지사항 타입\n- notice_type_display: 공지사항 타입 표시명\n- priority: 중요도\n- priority_display: 중요도 표시명\n- author_name: 작성자 이름\n- is_published: 공개 여부\n- is_pinned: 상단 고정 여부\n- view_count: 조회수\n- attachment: 첨부파일\n- attachment_url: 첨부파일 URL\n- start_date: 공지 시작일\n- end_date: 공지 종료일\n- created_at: 생성 시간\n- updated_at: 수정 시간\n- is_read: 읽음 여부 (로그인한 사용자만)\n- is_active: 활성화 여부\n\n응답:\n- 200: 성공적으로 공지사항 상세 정보를 반환\n- 404: 공지사항을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "공지사항 생성",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "중요한 공지사항입니다",
                  "type": "text",
                  "description": "공지사항 제목 (최소 5자 이상, 필수)"
                },
                {
                  "key": "content",
                  "value": "이것은 중요한 공지사항의 내용입니다. 모든 사용자가 확인해주시기 바랍니다.",
                  "type": "text",
                  "description": "공지사항 내용 (최소 10자 이상, 필수)"
                },
                {
                  "key": "notice_type",
                  "value": "GENERAL",
                  "type": "text",
                  "description": "공지사항 타입 (GENERAL: 전체 공지사항, MEMBER_ONLY: 회원 전용 공지사항)"
                },
                {
                  "key": "priority",
                  "value": "HIGH",
                  "type": "text",
                  "description": "중요도 (LOW: 낮음, NORMAL: 보통, HIGH: 높음, URGENT: 긴급)"
                },
                {
                  "key": "is_published",
                  "value": "true",
                  "type": "text",
                  "description": "공개 여부 (true/false, 기본값: true)"
                },
                {
                  "key": "is_pinned",
                  "value": "true",
                  "type": "text",
                  "description": "상단 고정 여부 (true/false, 기본값: false)"
                },
                {
                  "key": "attachment",
                  "type": "file",
                  "description": "첨부파일 (선택사항)"
                },
                {
                  "key": "start_date",
                  "value": "2024-06-01T09:00:00Z",
                  "type": "text",
                  "description": "공지 시작일 (ISO 포맷, 선택사항)"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31T23:59:59Z",
                  "type": "text",
                  "description": "공지 종료일 (ISO 포맷, 선택사항)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/notices/create/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "create",
                ""
              ]
            },
            "description": "새로운 공지사항을 생성합니다.\n\n권한: 관리자만 생성 가능\n\n필수 파라미터:\n- title: 공지사항 제목 (최소 5자 이상)\n- content: 공지사항 내용 (최소 10자 이상)\n\n선택 파라미터:\n- notice_type: 공지사항 타입 (기본값: GENERAL)\n- priority: 중요도 (기본값: NORMAL)\n- is_published: 공개 여부 (기본값: true)\n- is_pinned: 상단 고정 여부 (기본값: false)\n- attachment: 첨부파일\n- start_date: 공지 시작일\n- end_date: 공지 종료일\n\n응답:\n- 201: 성공적으로 공지사항 생성\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청 (관리자 권한 필요)\n- 404: 공지사항을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "공지사항 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "수정된 공지사항 제목",
                  "type": "text",
                  "description": "공지사항 제목 (최소 5자 이상)"
                },
                {
                  "key": "content",
                  "value": "수정된 공지사항 내용입니다.",
                  "type": "text",
                  "description": "공지사항 내용 (최소 10자 이상)"
                },
                {
                  "key": "notice_type",
                  "value": "MEMBER_ONLY",
                  "type": "text",
                  "description": "공지사항 타입"
                },
                {
                  "key": "priority",
                  "value": "URGENT",
                  "type": "text",
                  "description": "중요도"
                },
                {
                  "key": "is_published",
                  "value": "true",
                  "type": "text",
                  "description": "공개 여부"
                },
                {
                  "key": "is_pinned",
                  "value": "false",
                  "type": "text",
                  "description": "상단 고정 여부"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/notices/1/update/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "1",
                "update",
                ""
              ]
            },
            "description": "기존 공지사항을 수정합니다.\n\n권한: 관리자만 수정 가능\n\n응답:\n- 200: 성공적으로 공지사항 수정\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청 (관리자 권한 필요)\n- 404: 공지사항을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "공지사항 삭제",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/1/delete/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "1",
                "delete",
                ""
              ]
            },
            "description": "공지사항을 삭제합니다.\n\n권한: 관리자만 삭제 가능\n\n응답:\n- 204: 성공적으로 공지사항 삭제\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청 (관리자 권한 필요)\n- 404: 공지사항을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "공지사항 읽음 표시",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/1/mark-read/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "1",
                "mark-read",
                ""
              ]
            },
            "description": "특정 공지사항을 읽음으로 표시합니다.\n\n권한: 로그인한 사용자만 가능\n\n응답:\n- 201: 성공적으로 읽음으로 표시\n- 200: 이미 읽은 공지사항\n- 401: 인증되지 않은 요청\n- 403: 공지사항을 볼 권한이 없음\n- 404: 공지사항을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "읽지 않은 공지사항 개수 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/unread-count/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "unread-count",
                ""
              ]
            },
            "description": "사용자가 읽지 않은 공지사항의 개수를 조회합니다.\n\n권한: 로그인한 사용자만 가능\n\n응답 데이터:\n- unread_count: 읽지 않은 공지사항 개수\n\n응답:\n- 200: 성공적으로 개수를 반환\n- 401: 인증되지 않은 요청"
          },
          "response": []
        },
        {
          "name": "내가 읽은 공지사항 목록",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/my-read/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "my-read",
                ""
              ]
            },
            "description": "내가 읽은 공지사항 목록을 조회합니다.\n\n권한: 로그인한 사용자만 가능\n\n응답 데이터:\n- id: 읽음 상태 ID\n- notice: 공지사항 ID\n- notice_title: 공지사항 제목\n- user_name: 사용자 이름\n- read_at: 읽은 시간\n\n응답:\n- 200: 성공적으로 읽은 공지사항 목록을 반환\n- 401: 인증되지 않은 요청"
          },
          "response": []
        }
      ]
    },
    {
      "name": "토너먼트 좌석권 분배",
      "description": "토너먼트 좌석권 분배 관리 API 엔드포인트",
      "item": [
        {
          "name": "분배 목록 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/?tournament_id=1&store_id=1&search=ASL&ordering=-created_at",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID로 필터링",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "ASL",
                  "description": "토너먼트명, 매장명, 메모에서 검색",
                  "disabled": true
                },
                {
                  "key": "ordering",
                  "value": "-created_at",
                  "description": "정렬 기준 (created_at, -created_at, updated_at, -updated_at, allocated_quantity, -allocated_quantity)",
                  "disabled": true
                }
              ]
            },
            "description": "토너먼트 좌석권 분배 목록을 조회합니다.\n\n응답 데이터:\n- id: 분배 ID\n- tournament: 토너먼트 ID\n- tournament_name: 토너먼트명\n- tournament_details: 토너먼트 상세 정보\n- store: 매장 ID\n- store_name: 매장명\n- store_details: 매장 상세 정보\n- allocated_quantity: 분배된 좌석권 수량\n- remaining_quantity: 보유 중인 좌석권 수량\n- distributed_quantity: 배포된 좌석권 수량\n- memo: 메모\n- created_at: 생성 시간\n- updated_at: 수정 시간\n\n응답:\n- 200: 성공적으로 분배 목록을 반환\n- 401: 인증되지 않은 요청"
          },
          "response": []
        },
        {
          "name": "분배 상세 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/1/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "1",
                ""
              ]
            },
            "description": "특정 분배의 상세 정보를 조회합니다.\n\n응답:\n- 200: 성공적으로 분배 상세 정보를 반환\n- 401: 인증되지 않은 요청\n- 404: 분배를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "분배 생성",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tournament\": 1,\n  \"store\": 1,\n  \"allocated_quantity\": 50,\n  \"remaining_quantity\": 30,\n  \"distributed_quantity\": 20,\n  \"memo\": \"6월 첫째주 토너먼트 분배\"\n}",
              "description": "분배 생성 데이터"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                ""
              ]
            },
            "description": "새로운 토너먼트 좌석권 분배를 생성합니다.\n\n필수 파라미터:\n- tournament: 토너먼트 ID\n- store: 매장 ID\n- allocated_quantity: 분배된 좌석권 수량\n- remaining_quantity: 보유 중인 좌석권 수량\n- distributed_quantity: 배포된 좌석권 수량\n\n선택 파라미터:\n- memo: 메모\n\n검증 규칙:\n- allocated_quantity = remaining_quantity + distributed_quantity\n- 동일한 토너먼트와 매장에 대한 중복 분배 불가\n\n응답:\n- 201: 성공적으로 분배 생성\n- 400: 잘못된 요청 데이터 (검증 실패)\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청"
          },
          "response": []
        },
        {
          "name": "분배 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tournament\": 1,\n  \"store\": 1,\n  \"allocated_quantity\": 60,\n  \"remaining_quantity\": 25,\n  \"distributed_quantity\": 35,\n  \"memo\": \"수정된 분배 정보\"\n}",
              "description": "분배 수정 데이터"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/1/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "1",
                ""
              ]
            },
            "description": "기존 분배 정보를 수정합니다.\n\n응답:\n- 200: 성공적으로 분배 수정\n- 400: 잘못된 요청 데이터 (검증 실패)\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 분배를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "분배 삭제",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (관리자 권한 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/1/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "1",
                ""
              ]
            },
            "description": "분배를 삭제합니다.\n\n응답:\n- 204: 성공적으로 분배 삭제\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 분배를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "좌석권 배포",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (매장 관리자 권한 필요)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 5,\n  \"memo\": \"회원에게 좌석권 5개 배포\"\n}",
              "description": "좌석권 배포 데이터"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/1/distribute_tickets/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "1",
                "distribute_tickets",
                ""
              ]
            },
            "description": "매장에서 회원들에게 좌석권을 배포합니다.\n\n필수 파라미터:\n- quantity: 배포할 좌석권 수량 (1 이상)\n\n선택 파라미터:\n- memo: 배포 사유 메모\n\n비즈니스 로직:\n- 보유 수량에서 배포 수량만큼 차감\n- 배포 수량에 추가\n- 보유 수량이 부족하면 오류 반환\n\n응답:\n- 200: 성공적으로 좌석권 배포\n  - success: true\n  - message: 성공 메시지\n  - data: 업데이트된 분배 정보\n- 400: 잘못된 요청 데이터 또는 보유 수량 부족\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 분배를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "좌석권 반환",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (매장 관리자 권한 필요)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 3,\n  \"memo\": \"회원 취소로 인한 좌석권 3개 반환\"\n}",
              "description": "좌석권 반환 데이터"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/1/return_tickets/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "1",
                "return_tickets",
                ""
              ]
            },
            "description": "회원들로부터 좌석권을 반환받습니다.\n\n필수 파라미터:\n- quantity: 반환받을 좌석권 수량 (1 이상)\n\n선택 파라미터:\n- memo: 반환 사유 메모\n\n비즈니스 로직:\n- 배포 수량에서 반환 수량만큼 차감\n- 보유 수량에 추가\n- 배포 수량이 부족하면 오류 반환\n\n응답:\n- 200: 성공적으로 좌석권 반환\n  - success: true\n  - message: 성공 메시지\n  - data: 업데이트된 분배 정보\n- 400: 잘못된 요청 데이터 또는 배포 수량 부족\n- 401: 인증되지 않은 요청\n- 403: 권한이 없는 요청\n- 404: 분배를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "토너먼트별 분배 요약",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/summary_by_tournament/?tournament_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "summary_by_tournament",
                ""
              ],
              "query": [
                {
                  "key": "tournament_id",
                  "value": "1",
                  "description": "토너먼트 ID (필수)"
                }
              ]
            },
            "description": "특정 토너먼트의 매장별 분배 요약 정보를 조회합니다.\n\n필수 파라미터:\n- tournament_id: 토너먼트 ID\n\n응답 데이터:\n- tournament: 토너먼트 정보 (id, name, ticket_quantity)\n- summary: 전체 요약 정보\n  - total_allocated: 총 분배된 수량\n  - total_remaining: 총 보유 수량\n  - total_distributed: 총 배포된 수량\n  - unallocated: 미분배 수량\n  - distribution_rate: 배포율 (%)\n- store_distributions: 매장별 분배 현황\n  - store_id: 매장 ID\n  - store_name: 매장명\n  - allocated_quantity: 분배된 수량\n  - remaining_quantity: 보유 수량\n  - distributed_quantity: 배포된 수량\n  - distribution_rate: 배포율 (%)\n\n응답:\n- 200: 성공적으로 요약 정보를 반환\n- 400: tournament_id 파라미터 누락\n- 401: 인증되지 않은 요청\n- 404: 토너먼트를 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "매장별 분배 요약",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/summary_by_store/?store_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "summary_by_store",
                ""
              ],
              "query": [
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장 ID (필수)"
                }
              ]
            },
            "description": "특정 매장의 토너먼트별 분배 요약 정보를 조회합니다.\n\n🎯 사용 목적:\n- 매장 관리 페이지에서 매장별 토너먼트 목록 표시\n- 매장 확장 시 해당 매장이 진행하는 토너먼트 DataTable 서브 테이블로 표시\n- 각 토너먼트의 분배 좌석권, 남은 좌석권, 상태 등을 한눈에 확인\n\n필수 파라미터:\n- store_id: 매장 ID\n\n응답 데이터:\n- store: 매장 정보 (id, name)\n- summary: 전체 요약 정보\n  - total_allocated: 총 분배받은 수량\n  - total_remaining: 총 보유 수량\n  - total_distributed: 총 배포한 수량\n  - distribution_rate: 배포율 (%)\n- tournaments: 토너먼트별 분배 현황 배열\n  - tournament_id: 토너먼트 ID\n  - tournament_name: 토너먼트명\n  - tournament_start_time: 토너먼트 시작일시\n  - tournament_buy_in: 참가비\n  - tournament_status: 토너먼트 상태 (UPCOMING/ONGOING/COMPLETED/CANCELLED)\n  - allocated_quantity: 분배받은 수량\n  - remaining_quantity: 보유 수량\n  - distributed_quantity: 배포한 수량\n  - distribution_rate: 배포율 (%)\n\n프론트엔드 사용예:\n```javascript\n// 매장별 토너먼트 목록 조회\nconst response = await distributionAPI.getSummaryByStore(storeId);\nconst tournaments = response.data?.tournaments || [];\nsetStoreTournaments(prev => ({ ...prev, [storeId]: tournaments }));\n```\n\n응답:\n- 200: 성공적으로 요약 정보를 반환\n- 400: store_id 파라미터 누락\n- 401: 인증되지 않은 요청\n- 404: 매장을 찾을 수 없음"
          },
          "response": []
        },
        {
          "name": "전체 분배 요약",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/seats/distributions/overall_summary/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "seats",
                "distributions",
                "overall_summary",
                ""
              ]
            },
            "description": "전체 시스템의 분배 요약 정보를 조회합니다.\n\n응답 데이터:\n- overall_summary: 전체 요약 정보\n  - total_allocated: 총 분배된 수량\n  - total_remaining: 총 보유 수량\n  - total_distributed: 총 배포된 수량\n  - distribution_rate: 전체 배포율 (%)\n  - total_distributions: 총 분배 건수\n- tournament_summary: 토너먼트별 요약\n  - tournament_name: 토너먼트명\n  - total_tickets: 총 좌석권 수량\n  - allocated: 분배된 수량\n  - remaining: 보유 수량\n  - distributed: 배포된 수량\n  - store_count: 분배받은 매장 수\n- store_summary: 매장별 요약\n  - store_name: 매장명\n  - allocated: 분배받은 수량\n  - remaining: 보유 수량\n  - distributed: 배포한 수량\n  - tournament_count: 참여 토너먼트 수\n\n응답:\n- 200: 성공적으로 전체 요약 정보를 반환\n- 401: 인증되지 않은 요청"
          },
          "response": []
        }
      ]
    },
    {
      "name": "🎯 배너 관리 API",
      "description": "배너 관리 관련 API 엔드포인트",
      "item": [
        {
          "name": "메인 토너먼트 배너 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/banners/main_tournament/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "banners",
                "main_tournament",
                ""
              ]
            },
            "description": "현재 설정된 메인 토너먼트 배너를 조회합니다.\n\n🔧 2025.01 업데이트: is_main_selected 필드 추가\n- 메인 토너먼트 배너 중 실제로 메인에 표시되는 배너 구분\n- is_main_selected=True인 배너만 반환하도록 변경\n- 중복 호출 방지 로직 추가\n\n⚡ 주요 특징:\n- 🔓 인증 불필요 (AllowAny 권한)\n- 📱 모바일 광고 페이지에서 주로 사용\n- 🎪 is_main_selected=True로 설정된 배너만 반환\n- 🕐 현재 활성화된 메인 배너만 조회 (is_active=True, 기간 내)\n\n사용처:\n- AslAd.jsx 컴포넌트의 토너먼트 정보 섹션\n- 모바일 광고 화면 메인 배너 표시\n\n응답 데이터:\n- banner: 메인 토너먼트 배너 정보\n  - id: 배너 ID\n  - title: 배너 제목\n  - description: 배너 설명\n  - image: 배너 이미지 URL\n  - store: 연관 매장 정보\n  - is_active: 활성화 상태\n  - is_main_tournament: 메인 토너먼트 배너 여부\n  - is_main_selected: 메인 선택 배너 여부 ⭐ 새로 추가\n  - start_date: 시작일\n  - end_date: 종료일\n\n응답:\n- 200: 성공적으로 메인 배너를 반환 (배너가 없으면 banner: null)\n- 500: 서버 오류"
          },
          "response": [
            {
              "name": "메인 배너 있음",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/banners/main_tournament/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "banners",
                    "main_tournament",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"banner\": {\n        \"id\": 1,\n        \"title\": \"2025 ASL 챔피언십\",\n        \"description\": \"대한민국 최대 규모의 홀덤 토너먼트가 시작됩니다!\",\n        \"image\": \"/media/banners/main_tournament_2025.jpg\",\n        \"store\": {\n            \"id\": 1,\n            \"name\": \"강남점\",\n            \"address\": \"서울시 강남구 테헤란로 123\"\n        },\n        \"is_active\": true,\n        \"is_main_tournament\": true,\n        \"is_main_selected\": true,\n        \"start_date\": \"2025-01-01\",\n        \"end_date\": \"2025-12-31\",\n        \"created_at\": \"2025-01-15T10:30:00Z\",\n        \"updated_at\": \"2025-01-15T10:30:00Z\"\n    }\n}"
            },
            {
              "name": "메인 배너 없음",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/banners/main_tournament/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "banners",
                    "main_tournament",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"banner\": null\n}"
            }
          ]
        },
        {
          "name": "활성 배너 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/banners/active/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "banners",
                "active",
                ""
              ]
            },
            "description": "현재 활성화된 모든 배너 목록을 조회합니다.\n\n⚡ 주요 특징:\n- 🔓 인증 불필요 (AllowAny 권한)\n- 📅 현재 날짜 기준으로 활성화된 배너만 반환\n- 🏪 매장별 필터링 가능 (store_id 파라미터)\n- 📊 생성일 기준 내림차순 정렬\n\n쿼리 파라미터:\n- store_id (선택): 특정 매장의 배너만 조회\n\n응답:\n- 200: 성공적으로 활성 배너 목록을 반환\n- 500: 서버 오류"
          },
          "response": []
        },
        {
          "name": "배너 목록 조회 (관리자용)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/banners/?is_active=true&store_id=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "banners",
                ""
              ],
              "query": [
                {
                  "key": "is_active",
                  "value": "true",
                  "description": "활성 배너만 조회 (true/false)"
                },
                {
                  "key": "store_id",
                  "value": "1",
                  "description": "매장별 필터링"
                },
                {
                  "key": "start_date",
                  "value": "2025-01-01",
                  "disabled": true,
                  "description": "시작일 필터 (YYYY-MM-DD)"
                },
                {
                  "key": "end_date",
                  "value": "2025-12-31",
                  "disabled": true,
                  "description": "종료일 필터 (YYYY-MM-DD)"
                }
              ]
            },
            "description": "관리자용 배너 목록을 조회합니다.\n\n🔐 권한 요구사항:\n- 🔑 JWT 토큰 인증 필요\n- 🏪 매장 관리자: 자신의 매장 배너만 조회 가능\n- 👑 시스템 관리자: 모든 배너 조회 가능\n\n🔍 필터링 옵션:\n- is_active: 활성화 상태별 필터링\n- store_id: 매장별 필터링\n- start_date/end_date: 기간별 필터링\n\n응답:\n- 200: 성공적으로 배너 목록을 반환\n- 401: 인증되지 않은 요청\n- 403: 권한 없음"
          },
          "response": []
        },
        {
          "name": "배너 생성",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "description": "JWT 액세스 토큰 (로그인 필요)"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "새 토너먼트 배너",
                  "type": "text",
                  "description": "배너 제목"
                },
                {
                  "key": "description",
                  "value": "새로운 토너먼트를 소개하는 배너입니다.",
                  "type": "text",
                  "description": "배너 설명"
                },
                {
                  "key": "image",
                  "type": "file",
                  "description": "배너 이미지 파일"
                },
                {
                  "key": "store",
                  "value": "1",
                  "type": "text",
                  "description": "매장 ID (관리자만 설정 가능)"
                },
                {
                  "key": "is_active",
                  "value": "true",
                  "type": "text",
                  "description": "활성화 상태"
                },
                {
                  "key": "is_main_tournament",
                  "value": "false",
                  "type": "text",
                  "description": "메인 토너먼트 배너 여부"
                },
                {
                  "key": "is_main_selected",
                  "value": "false",
                  "type": "text",
                  "description": "메인 선택 배너 여부 (메인 토너먼트 배너 중 실제로 메인에 표시되는 배너)"
                },
                {
                  "key": "start_date",
                  "value": "2025-01-15",
                  "type": "text",
                  "description": "시작일 (YYYY-MM-DD)"
                },
                {
                  "key": "end_date",
                  "value": "2025-12-31",
                  "type": "text",
                  "description": "종료일 (YYYY-MM-DD)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/banners/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "banners",
                ""
              ]
            },
            "description": "새로운 배너를 생성합니다.\n\n🔧 2025.01 업데이트: is_main_selected 필드 추가\n- 메인 토너먼트 배너 중 실제로 메인에 표시되는 배너 구분\n- is_main_selected 필드로 메인 선택 여부 설정 가능\n\n🔧 2025.01 이미지 업로드 개선:\n- 프론트엔드에서 FormData 객체 직접 생성하여 전송\n- 이미지 파일 업로드 안정성 향상\n- API에서 FormData 자동 감지 및 처리\n\n🔐 권한 처리:\n- 매장 관리자: 자신의 매장으로 자동 설정\n- 시스템 관리자: 요청된 매장으로 설정\n\n📝 필수 필드:\n- title: 배너 제목\n- image: 배너 이미지 파일 (FormData 파일 업로드)\n- start_date/end_date: 배너 표시 기간\n\n🎪 배너 종류:\n- is_main_tournament: 메인 토너먼트 배너 카테고리\n- is_main_selected: 메인 토너먼트 배너 중 실제로 메인에 표시되는 배너 (1개만 선택 가능)\n- is_store_gallery: 인기 스토어 갤러리 배너 (최대 8개)\n\n⚠️ 주의사항:\n- 이미지 파일은 반드시 FormData 형태로 전송\n- 최대 파일 크기: 10MB\n- 지원 형식: JPG, PNG, GIF\n- Content-Type: multipart/form-data 자동 설정\n\n응답:\n- 201: 성공적으로 배너를 생성\n- 400: 잘못된 요청 데이터\n- 401: 인증되지 않은 요청\n- 403: 권한 없음\n- 413: 파일 크기 초과"
          },
          "response": []
        },
        {
          "name": "스토어 갤러리 배너 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/banners/store_gallery/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "banners",
                "store_gallery",
                ""
              ]
            },
            "description": "광고 페이지 인기 스토어 갤러리에 표시될 배너를 조회합니다.\n\n⭐ 2025.01 새로 추가: 스토어 갤러리 배너 API\n- 광고 페이지(AslAd.jsx) 인기 스토어 갤러리 섹션용\n- 스토어 이미지 클릭 시 매장 상세화면으로 이동 지원\n- 매장 ID가 있는 배너는 상세화면, 없는 배너는 매장 검색 페이지로 이동\n\n⚡ 주요 특징:\n- 🔓 인증 불필요 (AllowAny 권한)\n- 📱 모바일 광고 페이지에서 주로 사용\n- 🏪 is_store_gallery=True로 설정된 배너만 반환\n- 🕐 현재 활성화된 배너만 조회 (is_active=True, 기간 내)\n- 📊 생성일 기준 내림차순 정렬\n- 🔢 최대 8개까지 표시 (슬라이딩 갤러리 UI)\n\n사용처:\n- AslAd.jsx 컴포넌트의 인기 스토어 갤러리 섹션\n- 모바일 광고 화면 스토어 이미지 표시\n- 스토어 이미지 클릭 시 매장 상세 페이지 이동\n\n응답 데이터:\n- banners: 스토어 갤러리 배너 목록\n  - id: 배너 ID\n  - title: 배너 제목 (매장명으로 사용)\n  - description: 배너 설명 (매장 소개)\n  - image: 배너 이미지 URL\n  - store: 연관 매장 정보\n    - id: 매장 ID (클릭 시 상세화면 이동용)\n    - name: 매장명\n    - address: 매장 주소\n  - is_active: 활성화 상태\n  - is_store_gallery: 스토어 갤러리 배너 여부\n  - start_date: 시작일\n  - end_date: 종료일\n\n클릭 동작:\n- 실제 매장 ID가 있는 경우: /mobile/common/store-detail/{store.id}\n- 매장 ID가 없는 경우: /mobile/common/store-search\n- 갤러리 임시 ID(gallery-*)인 경우: /mobile/common/store-search\n\n응답:\n- 200: 성공적으로 스토어 갤러리 배너 목록을 반환\n- 500: 서버 오류"
          },
          "response": [
            {
              "name": "스토어 갤러리 배너 있음",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/banners/store_gallery/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "banners",
                    "store_gallery",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"banners\": [\n        {\n            \"id\": 10,\n            \"title\": \"ASL 홀덤 강남점\",\n            \"description\": \"도심 속 프리미엄 홀덤 전문점\",\n            \"image\": \"/media/banners/store_gallery_gangnam.jpg\",\n            \"store\": {\n                \"id\": 1,\n                \"name\": \"ASL 홀덤 강남점\",\n                \"address\": \"서울시 강남구 테헤란로 123\"\n            },\n            \"is_active\": true,\n            \"is_store_gallery\": true,\n            \"start_date\": \"2025-01-01\",\n            \"end_date\": \"2025-12-31\",\n            \"created_at\": \"2025-01-15T10:30:00Z\"\n        },\n        {\n            \"id\": 11,\n            \"title\": \"ASL 홀덤 홍대점\",\n            \"description\": \"젊은 분위기의 홀덤 매장\",\n            \"image\": \"/media/banners/store_gallery_hongdae.jpg\",\n            \"store\": {\n                \"id\": 2,\n                \"name\": \"ASL 홀덤 홍대점\",\n                \"address\": \"서울시 마포구 홍대입구로 45\"\n            },\n            \"is_active\": true,\n            \"is_store_gallery\": true,\n            \"start_date\": \"2025-01-01\",\n            \"end_date\": \"2025-12-31\",\n            \"created_at\": \"2025-01-15T10:25:00Z\"\n        }\n    ]\n}"
            },
            {
              "name": "스토어 갤러리 배너 없음",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/banners/store_gallery/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "banners",
                    "store_gallery",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"banners\": []\n}"
            }
          ]
        },
        {
          "name": "배너 생성"
        }
      ]
    },
    {
      "name": "📢 공지사항 관리 API",
      "item": [
        {
          "name": "관리자용 공지사항 조회 (단순 GET 방식)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/notices/admin-simple/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "notices",
                "admin-simple",
                ""
              ]
            }
          },
          "response": [
            {
              "name": "성공 응답",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/notices/admin-simple/",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notices",
                    "admin-simple",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n    {\n        \"id\": 1,\n        \"title\": \"시스템 점검 안내\",\n        \"content\": \"2025년 6월 3일 오후 2시부터 4시까지 시스템 점검을 실시합니다.\",\n        \"notice_type\": \"GENERAL\",\n        \"notice_type_display\": \"전체 공지사항\",\n        \"priority\": \"HIGH\",\n        \"priority_display\": \"높음\",\n        \"author_name\": \"admin\",\n        \"is_published\": true,\n        \"is_pinned\": true,\n        \"z_order\": 10,\n        \"view_count\": 125,\n        \"created_at\": \"2025-06-03T10:30:00Z\",\n        \"updated_at\": \"2025-06-03T10:30:00Z\",\n        \"start_date\": null,\n        \"end_date\": null,\n        \"is_read\": false,\n        \"is_active\": true\n    }\n]"
            }
          ],
          "description": "관리자용 공지사항 목록을 조회합니다. OPTIONS 요청을 방지하기 위해 단순한 GET 방식과 function-based view를 사용합니다. 권한 확인은 내부에서 처리되며, 관리자가 아닌 경우 빈 배열을 반환합니다."
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string",
      "description": "API 서버 기본 URL"
    }
  ]
} 