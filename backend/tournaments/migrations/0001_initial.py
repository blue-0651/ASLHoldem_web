# Generated by Django 4.2.7 on 2025-04-23 10:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stores', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='토너먼트명')),
                ('start_time', models.DateTimeField(verbose_name='시작 시간')),
                ('buy_in', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='바이인')),
                ('max_players', models.IntegerField(verbose_name='최대 참가자 수')),
                ('description', models.TextField(blank=True, null=True, verbose_name='토너먼트 설명')),
                ('status', models.CharField(choices=[('UPCOMING', '예정'), ('ONGOING', '진행중'), ('COMPLETED', '완료'), ('CANCELLED', '취소')], default='UPCOMING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='stores.store')),
            ],
            options={
                'verbose_name': '토너먼트',
                'verbose_name_plural': '토너먼트들',
                'db_table': 'tournaments',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.IntegerField(verbose_name='좌석 번호')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('status', models.CharField(choices=[('AVAILABLE', '이용가능'), ('OCCUPIED', '사용중'), ('RESERVED', '예약됨')], default='AVAILABLE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='tournaments.tournament')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '좌석',
                'verbose_name_plural': '좌석들',
                'db_table': 'seats',
                'unique_together': {('tournament', 'seat_number')},
            },
        ),
        migrations.CreateModel(
            name='TournamentRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('checked_in', models.BooleanField(default=False)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('seat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registration', to='tournaments.seat')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='tournaments.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '토너먼트 등록',
                'verbose_name_plural': '토너먼트 등록들',
                'db_table': 'tournament_registrations',
                'unique_together': {('tournament', 'user')},
            },
        ),
    ]
